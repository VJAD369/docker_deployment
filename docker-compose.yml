version: "3.8"

services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      ecommerce_network:
        ipv4_address: 172.20.0.4

  backend:
    build: ./backend # Replace with your backend directory name
    restart: on-failure:10
    depends_on:
      - mysql
    ports:
      - "4000:4000" # Expose Node.js server port
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=testDB
    networks:
      ecommerce_network:
        ipv4_address: 172.20.0.6
    volumes:
      - ./frontend:/app/frontend
    stdin_open: true
    tty: true

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=password # Set a strong password
      - MYSQL_DATABASE=testDB
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      ecommerce_network:
        ipv4_address: 172.20.0.5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200" # Expose Elasticsearch HTTP port (optional)
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      ecommerce_network:
        ipv4_address: 172.20.0.3
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.2
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601" 
    networks:
      ecommerce_network:
        ipv4_address: 172.20.0.7    

networks:
  ecommerce_network:
    external: true

volumes:
  elasticsearch_data:
    driver: local
  mysql_data:
    driver: local